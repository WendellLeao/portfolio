{"version":3,"file":"static/js/1984.352bad3a.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, motionValue, name } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.20\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.20 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.20\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","repeat","repeatType","finalKeyframe","resolvedKeyframes","filter","index","undefined","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","mixImmediate","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","pipe","_a","orderedOrigin","pointers","values","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","motionValue","onResolved","owner","resolver","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","cancel","teardown","onStop","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","latestValues","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","postRender","camelToDash","isKeyframesTarget","_delay","acos","Queue","order","scheduled","process","indexOf","delete","clear","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","unresolvedKeyframes","readKeyframes","keyframe","positionalKeys","resolveNoneKeyframes","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","customMotionComponentConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","width","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","arguments","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","paddingLeft","paddingRight","paddingTop","paddingBottom","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getCurrent","currentValues","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith"],"sourceRoot":""}