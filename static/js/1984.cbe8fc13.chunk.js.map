{"version":3,"file":"static/js/1984.cbe8fc13.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved)\n            flushKeyframeResolvers();\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        const { name, type, velocity, delay, onComplete, onUpdate } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.teardown();\n        const { onStop } = this.options;\n        onStop && onStop();\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, motionValue, name } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            duration = pregeneratedAnimation.duration;\n            this.options.times = pregeneratedAnimation.times;\n            this.options.ease = pregeneratedAnimation.ease;\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\",\n    \"resolveKeyframes\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                fallbackAnimation[key] =\n                    fallbackTarget === undefined ? null : fallbackTarget;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart)\n                onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd)\n            onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        handler(event, info);\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd)\n                    onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            if (window.HandoffCancelAllAnimations) {\n                window.HandoffCancelAllAnimations();\n            }\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a, _b;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_b = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom)) === null || _b === void 0 ? void 0 : _b[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.0.20\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.0.20 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removeNonTranslationalTransform(element));\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.0.20\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","isAnimatable","name","Array","isArray","complex","test","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","updateFinishedPromise","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","velocity","onComplete","onUpdate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","concat","current","i","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","Promise","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","max","velocityPerSecond","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","backOut","backIn","reverseEasing","backInOut","mirrorEasing","easingLookup","linear","circIn","circInOut","circOut","anticipate","p","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","mixImmediate","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","pipe","_a","orderedOrigin","pointers","values","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","easing","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","now","frameData","isProcessing","time","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","KeyframeResolver","KeyframeResolver$1","super","holdTime","startTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","motionValue","onResolved","owner","resolver","resolveKeyframes","scheduleResolve","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","cancel","teardown","onStop","complete","stopDriver","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","supportsWaapi","callback","memo","Object","hasOwnProperty","call","Element","prototype","acceleratedValues","Set","AcceleratedAnimation","DOMKeyframesResolver","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","animation","element","valueName","keyframeOptions","animate","fill","iterations","direction","animateStyle","pendingTimeline","timeline","onfinish","set","playbackRate","playState","attachTimeline","sampleTime","setWithVelocity","supports","HTMLElement","getProps","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","visualElement","targetAndTransition","transitionOverride","transitionEnd","willChange","getValue","animations","animationTypeState","animationState","getState","latestValues","valueTarget","window","HandoffAppearAnimations","appearId","optimizedAppearDataAttribute","shouldReduceMotion","isWillChangeMotionValue","add","remove","all","setTarget","animateVariant","variant","resolveVariant","presenceContext","custom","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","delayChildren","staggerChildren","staggerDirection","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","forEach","child","notify","animateChildren","when","first","last","sortNodePosition","animateVisualElement","resolvedDefinition","postRender","camelToDash","isKeyframesTarget","_delay","acos","Queue","order","scheduled","process","indexOf","delete","clear","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","useManualTiming","performance","keepAlive","immediate","requestAnimationFrame","clearTime","queueMicrotask","splitCSSVariableRegex","getVariableValue","depth","token","fallback","match","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","trim","isNumericalString","parseFloat","unresolvedKeyframes","readKeyframes","keyframe","positionalKeys","resolveNoneKeyframes","originType","findDimensionValueType","targetType","isNumOrPxType","needsMeasurement","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureViewportBox","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","MotionContext","PresenceContext","LazyContext","strict","microtask","cancelMicrotask","isRefObject","ref","isVariantLabel","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","props","isVariantNode","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","parent","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","useInsertionEffect","wantsHandoff","HandoffComplete","useIsomorphicLayoutEffect","render","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","Proxy","componentCache","Map","_target","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","isForcedMotionValue","translateAlias","y","z","transformPerspective","numTransforms","transformPropOrder","getValueAsType","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","isCSSVariableName","valueType","numberValueTypes","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","source","isMotionValue","useStyle","assign","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","calcOrigin","px","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","width","pxOriginY","height","calcSVGTransformOrigin","scale","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveMotionValue","unwrappedValue","isCustomValue","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolveVariantFromProps","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","prev","prevLength","reversePriorityOrder","numAnimationTypes","createAnimationState","animateList","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","distance","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","has2DTranslate","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","resetDistortingTransform","sharedAnimationValues","setStaticValue","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","HandoffCancelAllAnimations","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","dimensionValueTypes","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","addValue","hasValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","getDefaultValueType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","int","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","scaleZ","skew","translateZ","perspective","progressPercentage","zIndex","backgroundPositionX","backgroundPositionY","fillOpacity","strokeOpacity","numOctaves","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getCurrent","currentValues","setMotionValue","resolveFinalValueInKeyframes","item","any","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","colorRegex","parsed","transformer","createUnitType","endsWith"],"sourceRoot":""}