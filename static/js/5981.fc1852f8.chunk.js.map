{"version":3,"file":"static/js/5981.fc1852f8.chunk.js","mappings":"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","sources":["components/GameButtonDisabled.tsx","components/GameButton.tsx","components/GameDescription.tsx","components/GameSideMenu.tsx","components/GameItem.tsx"],"sourcesContent":["import {useTranslation} from 'react-i18next';\r\nimport './GameButtonDisabled.css';\r\n\r\nconst GameButtonDisabled = () => {\r\n    const { t, i18n } = useTranslation();\r\n\r\n    return (\r\n        <div className=\"disabledButtonContainer\">\r\n            <button type=\"submit\" disabled>\r\n                {t(\"disabledGameButton\")}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameButtonDisabled;","import GameButtonDisabled from './GameButtonDisabled';\r\nimport itchImage from '../images/itchio.png';\r\nimport steamImage from '../images/steam.png';\r\nimport './GameButton.css';\r\n\r\ninterface Props{\r\n    store: string;\r\n    url: string;\r\n}\r\n\r\nconst GameButton = ({store, url}: Props) => {\r\n    function GetGameButton() : JSX.Element {\r\n        if(url !== \"\"){\r\n            return (\r\n                <div className=\"buttonContainer\">\r\n                    <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <img className={GetStoreImgClass(store)} src={GetStoreImage(store)} alt=\"store icon\"></img>\r\n                    </a>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return <GameButtonDisabled />\r\n    }\r\n    \r\n    function GetStoreImgClass(store: string) : string {\r\n        return store === \"itch\" ? \"itchLogo\" : \"steamLogo\";\r\n    }\r\n\r\n    function GetStoreImage(store: string) : string {\r\n        return store === \"itch\" ? itchImage : steamImage;\r\n    }\r\n    \r\n    return (\r\n        <div>{GetGameButton()}</div>\r\n    )\r\n}\r\n\r\nexport default GameButton;","import React from \"react\";\r\nimport GameButton from './GameButton';\r\nimport {useTranslation} from 'react-i18next';\r\nimport {Reveal} from \"./Reveal\";\r\nimport closeImage from '../images/close-image.png';\r\nimport './GameDescription.css';\r\n\r\ninterface Props {\r\n    name: string;\r\n    synopses: string;\r\n    description: string;\r\n    store: string;\r\n    url: string;\r\n    onCloseButtonClick: () => void;\r\n}\r\n\r\nconst GameDescription = ({name, synopses, description, store, url, onCloseButtonClick} : Props) => {\r\n    const { t, i18n } = useTranslation();\r\n    \r\n    return (\r\n        <Reveal>\r\n            <div className=\"gameDescriptionContainer\">\r\n                <Reveal>\r\n                    <h1>\r\n                        {name}\r\n                        <div className=\"gameDescriptionLine\"></div>\r\n                    </h1>\r\n                </Reveal>\r\n                <Reveal>\r\n                    <em>\r\n                        <p className=\"synopses\">\r\n                            {t(synopses)}\r\n                        </p>\r\n                    </em>\r\n                </Reveal>\r\n                <Reveal>\r\n                    <p className=\"description\">\r\n                        {t(description)}\r\n                    </p>\r\n                </Reveal>\r\n                <Reveal>\r\n                    <GameButton store={store} url={url} />\r\n                </Reveal>\r\n                <a className=\"closeButton\" onClick={onCloseButtonClick}>\r\n                    <img src={closeImage} alt=\"close image\"/>\r\n                </a>\r\n            </div>\r\n        </Reveal>\r\n    )\r\n}\r\n\r\nexport default GameDescription;","import infoIcon from '../images/info-icon.png';\r\nimport './GameSideMenu.css';\r\n\r\ninterface Props {\r\n    title: string;\r\n    onInfoClick: () => void;\r\n}\r\n\r\nconst GameSideMenu = ({ title, onInfoClick }: Props) => {\r\n    return (\r\n        <div className=\"gameSideMenuContainer\">\r\n            <h1>\r\n                {title}\r\n            </h1>\r\n            <a onClick={onInfoClick} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <img src={infoIcon} alt=\"information icon\"></img>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameSideMenu;","import GameVideo from './GameVideo';\r\nimport GameDescription from './GameDescription';\r\nimport GameSideMenu from './GameSideMenu';\r\nimport {RefObject, useRef, useState} from 'react';\r\nimport './GameItem.css';\r\n\r\ninterface Props {\r\n    id: string;\r\n    title: string;\r\n    synopses: string;\r\n    description: string;\r\n    store: \"steam\" | \"itch\";\r\n    url?: string;\r\n    videoUrl: string;\r\n    imageUrl: string;\r\n    side: \"right\" | \"left\";\r\n    shadow?: \"top\" | \"bottom\"\r\n}\r\n\r\nconst GameItem = ({id, title, synopses, description, store = \"itch\", url = \"\", videoUrl, imageUrl, side, shadow}: Props) => {\r\n    const gameDescriptionRef : RefObject<HTMLDivElement> = useRef<HTMLDivElement>(null); \r\n    const gameSideMenuRef : RefObject<HTMLDivElement> = useRef<HTMLDivElement>(null);\r\n\r\n    const mediaQueryList : MediaQueryList = window.matchMedia(\"(min-width: 45em)\");\r\n\r\n    mediaQueryList.addEventListener(\"change\", function() : void {\r\n        if(mediaQueryList.matches){\r\n            ShowGameDescription();\r\n        }\r\n        else{\r\n            ShowGameSideMenu();\r\n        }\r\n    });\r\n    \r\n    function GetClassName() : string {\r\n        let className : string = \"gamesItem \" + id + \" \";\r\n        \r\n        if(shadow){\r\n            className += shadow + \"Shadow\";\r\n        }\r\n        \r\n        return className;\r\n    }\r\n    \r\n    function ShowGameDescription() : void {\r\n        if(gameDescriptionRef.current){\r\n            gameDescriptionRef.current.style.display = \"flex\";\r\n        }\r\n        \r\n        if(gameSideMenuRef.current){\r\n            gameSideMenuRef.current.style.display = \"none\";\r\n        }\r\n    }\r\n    \r\n    function ShowGameSideMenu() : void {\r\n        if(gameSideMenuRef.current){\r\n            gameSideMenuRef.current.style.display = \"flex\";\r\n        }\r\n\r\n        if(gameDescriptionRef.current){\r\n            gameDescriptionRef.current.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    const gameImageRef: RefObject<HTMLImageElement> = useRef<HTMLImageElement>(null);\r\n    \r\n    function HandleStart() : void {\r\n        if (gameImageRef.current) {\r\n            gameImageRef.current.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={GetClassName()}>\r\n            <div className=\"mediaContainer\">\r\n                <img ref={gameImageRef} src={imageUrl} alt=\"game image\" />\r\n                {/*<GameVideo videoUrl={videoUrl} onStart={HandleStart} />*/}\r\n            </div>\r\n            <div ref={gameDescriptionRef} id=\"gameDescription\" className={side}>\r\n                <GameDescription name={title}\r\n                                 synopses={synopses}\r\n                                 description={description}\r\n                                 store={store}\r\n                                 url={url}\r\n                                 onCloseButtonClick={ShowGameSideMenu}/>\r\n            </div>\r\n            <div ref={gameSideMenuRef} id=\"gameSideMenu\" className={side}>\r\n                <GameSideMenu title={title} onInfoClick={ShowGameDescription} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameItem;"],"names":["GameButtonDisabled","t","i18n","useTranslation","_jsx","className","children","type","disabled","GameButton","store","url","GetStoreImgClass","GetStoreImage","itchImage","steamImage","href","target","rel","src","alt","GameDescription","name","synopses","description","onCloseButtonClick","Reveal","_jsxs","onClick","GameSideMenu","title","onInfoClick","GameItem","id","videoUrl","imageUrl","side","shadow","gameDescriptionRef","useRef","gameSideMenuRef","mediaQueryList","window","matchMedia","ShowGameDescription","current","style","display","ShowGameSideMenu","addEventListener","matches","gameImageRef","GetClassName","ref"],"sourceRoot":""}