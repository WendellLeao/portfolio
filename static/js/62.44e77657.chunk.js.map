{"version":3,"file":"static/js/62.44e77657.chunk.js","mappings":"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","sources":["../node_modules/react-tsparticles/esm/Utils.js","../node_modules/react-tsparticles/esm/Particles.js","../node_modules/react-tsparticles/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","../node_modules/tsparticles-engine/esm/Core/Utils/Range.js","../node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","../node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","../node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Random.js","../node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","../node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","../node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","../node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","../node_modules/tsparticles-engine/esm/Utils/Utils.js","../node_modules/tsparticles-engine/esm/Core/Canvas.js","../node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","../node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","../node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","../node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","../node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","../node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","../node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","../node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","../node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","../node_modules/tsparticles-engine/esm/Options/Classes/Options.js","../node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","../node_modules/tsparticles-engine/esm/Core/Particle.js","../node_modules/tsparticles-engine/esm/Core/Utils/Point.js","../node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","../node_modules/tsparticles-engine/esm/Core/Particles.js","../node_modules/tsparticles-engine/esm/Core/Retina.js","../node_modules/tsparticles-engine/esm/Core/Container.js","../node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","../node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","../node_modules/tsparticles-engine/esm/Core/Engine.js","../node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","../node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","../node_modules/tsparticles-engine/esm/index.js","../node_modules/tsparticles-engine/esm/init.js","../node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","../node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","../node_modules/tsparticles-particles.js/esm/index.js","../node_modules/tsparticles-move-base/esm/Utils.js","../node_modules/tsparticles-move-base/esm/BaseMover.js","../node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","../node_modules/tsparticles-updater-color/esm/Utils.js","../node_modules/tsparticles-updater-color/esm/ColorUpdater.js","../node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","../node_modules/tsparticles-updater-opacity/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/Utils.js","../node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","../node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","../node_modules/tsparticles-updater-size/esm/SizeUpdater.js","../node_modules/tsparticles-updater-size/esm/Utils.js","../node_modules/tsparticles-basic/esm/index.js","../node_modules/tsparticles-move-base/esm/index.js","../node_modules/tsparticles-shape-circle/esm/index.js","../node_modules/tsparticles-updater-color/esm/index.js","../node_modules/tsparticles-updater-opacity/esm/index.js","../node_modules/tsparticles-updater-out-modes/esm/index.js","../node_modules/tsparticles-updater-size/esm/index.js","../node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","../node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","../node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","../node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","../node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","../node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","../node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","../node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","../node_modules/tsparticles-interaction-external-connect/esm/Utils.js","../node_modules/tsparticles-interaction-external-connect/esm/Connector.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","../node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","../node_modules/tsparticles-interaction-external-grab/esm/Utils.js","../node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","../node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","../node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","../node_modules/tsparticles-interaction-external-push/esm/Pusher.js","../node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","../node_modules/tsparticles-interaction-external-remove/esm/Remover.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","../node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","../node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","../node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","../node_modules/tsparticles-interaction-external-slow/esm/Slower.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","../node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","../node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","../node_modules/tsparticles-shape-image/esm/Utils.js","../node_modules/tsparticles-shape-image/esm/ImageDrawer.js","../node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","../node_modules/tsparticles-shape-image/esm/ImagePreloader.js","../node_modules/tsparticles-shape-image/esm/index.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","../node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","../node_modules/tsparticles-updater-life/esm/LifeUpdater.js","../node_modules/tsparticles-shape-line/esm/LineDrawer.js","../node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","../node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","../node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","../node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","../node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","../node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","../node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","../node_modules/tsparticles-interaction-particles-links/esm/Linker.js","../node_modules/tsparticles-interaction-particles-links/esm/Utils.js","../node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","../node_modules/tsparticles-interaction-particles-links/esm/plugin.js","../node_modules/tsparticles-interaction-particles-links/esm/index.js","../node_modules/tsparticles-interaction-particles-links/esm/interaction.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","../node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","../node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","../node_modules/tsparticles-shape-polygon/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","../node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","../node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","../node_modules/tsparticles-shape-square/esm/SquareDrawer.js","../node_modules/tsparticles-shape-star/esm/StarDrawer.js","../node_modules/tsparticles-updater-stroke-color/esm/Utils.js","../node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","../node_modules/tsparticles-shape-text/esm/TextDrawer.js","../node_modules/tsparticles-slim/esm/index.js","../node_modules/tsparticles-move-parallax/esm/index.js","../node_modules/tsparticles-interaction-external-attract/esm/index.js","../node_modules/tsparticles-interaction-external-bounce/esm/index.js","../node_modules/tsparticles-interaction-external-bubble/esm/index.js","../node_modules/tsparticles-interaction-external-connect/esm/index.js","../node_modules/tsparticles-interaction-external-grab/esm/index.js","../node_modules/tsparticles-interaction-external-pause/esm/index.js","../node_modules/tsparticles-interaction-external-push/esm/index.js","../node_modules/tsparticles-interaction-external-remove/esm/index.js","../node_modules/tsparticles-interaction-external-repulse/esm/index.js","../node_modules/tsparticles-interaction-external-slow/esm/index.js","../node_modules/tsparticles-interaction-particles-attract/esm/index.js","../node_modules/tsparticles-interaction-particles-collisions/esm/index.js","../node_modules/tsparticles-plugin-easing-quad/esm/index.js","../node_modules/tsparticles-shape-line/esm/index.js","../node_modules/tsparticles-shape-square/esm/index.js","../node_modules/tsparticles-shape-star/esm/index.js","../node_modules/tsparticles-shape-text/esm/index.js","../node_modules/tsparticles-updater-life/esm/index.js","../node_modules/tsparticles-updater-rotate/esm/index.js","../node_modules/tsparticles-updater-stroke-color/esm/index.js"],"sourcesContent":["const isObject = (val) => typeof val === \"object\" && val !== null;\nexport function deepCompare(obj1, obj2, excludeKeyFn = () => false) {\n    if (!isObject(obj1) || !isObject(obj2)) {\n        return obj1 === obj2;\n    }\n    const keys1 = Object.keys(obj1).filter(key => !excludeKeyFn(key)), keys2 = Object.keys(obj2).filter(key => !excludeKeyFn(key));\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    for (const key of keys1) {\n        const value1 = obj1[key], value2 = obj2[key];\n        if (isObject(value1) && isObject(value2)) {\n            if (value1 === obj2 && value2 === obj1) {\n                continue;\n            }\n            if (!deepCompare(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (Array.isArray(value1) && Array.isArray(value2)) {\n            if (!deepCompareArrays(value1, value2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (value1 !== value2) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction deepCompareArrays(arr1, arr2, excludeKeyFn) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        const val1 = arr1[i], val2 = arr2[i];\n        if (Array.isArray(val1) && Array.isArray(val2)) {\n            if (!deepCompareArrays(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (isObject(val1) && isObject(val2)) {\n            if (!deepCompare(val1, val2, excludeKeyFn)) {\n                return false;\n            }\n        }\n        else if (val1 !== val2) {\n            return false;\n        }\n    }\n    return true;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport { deepCompare } from \"./Utils\";\nconst defaultId = \"tsparticles\";\nclass Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        const nextOptions = nextProps.options ?? nextProps.params, currentOptions = this.props.options ?? this.props.params;\n        return (nextProps.url !== this.props.url ||\n            nextProps.id !== this.props.id ||\n            nextProps.canvasClassName !== this.props.canvasClassName ||\n            nextProps.className !== this.props.className ||\n            nextProps.height !== this.props.height ||\n            nextProps.width !== this.props.width ||\n            !deepCompare(nextProps.style, this.props.style) ||\n            nextProps.init !== this.props.init ||\n            nextProps.loaded !== this.props.loaded ||\n            !deepCompare(nextOptions, currentOptions, key => key.startsWith(\"_\")));\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: {\n                    ...this.props.style,\n                    width,\n                    height,\n                } })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        if (!this.state.init) {\n            return;\n        }\n        const id = this.props.id ?? Particles.defaultProps.id ?? defaultId, container = await tsParticles.load({\n            url: this.props.url,\n            id,\n            options: this.props.options ?? this.props.params,\n        });\n        if (this.props.container) {\n            this.props.container.current = container;\n        }\n        this.setState({\n            library: container,\n        });\n        if (this.props.loaded) {\n            await this.props.loaded(container);\n        }\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\nexport default Particles;\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n"],"names":["isObject","val","deepCompare","obj1","obj2","excludeKeyFn","keys1","Object","keys","filter","key","keys2","length","value1","value2","Array","isArray","deepCompareArrays","arr1","arr2","i","val1","val2","defaultId","Particles","Component","constructor","props","super","this","state","init","library","undefined","destroy","setState","shouldComponentUpdate","nextProps","nextOptions","options","params","currentOptions","url","id","canvasClassName","className","height","width","style","loaded","startsWith","componentDidUpdate","refresh","forceUpdate","then","componentDidMount","tsParticles","async","loadParticles","componentWillUnmount","render","React","defaultProps","container","load","current","Circle","Range","x","y","radius","contains","point","getDistance","position","intersects","range","pos1","pos2","distPos","Math","abs","r","sqrt","Rectangle","size","pow","generatedAttribute","mouseDownEvent","mouseUpEvent","mouseLeaveEvent","mouseOutEvent","mouseMoveEvent","touchStartEvent","touchEndEvent","touchMoveEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","errorPrefix","w","h","pos","size2","w2","h2","Vector","Vector3d","xOrCoords","origin","create","clone","source","z","_updateFromAngle","angle","cos","sin","isNumber","coords3d","Error","atan2","getLengthSq","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","AnimationOptions","count","enable","speed","decay","delay","sync","data","setRangeValue","RangedAnimationOptions","mode","startValue","minimumValue","OptionsColor","value","color","isString","Random","ValueWithRandom","random","isBoolean","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p1","p2","p3","paintBase","dimension","baseColor","fillStyle","fillRect","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","particle","delta","colorStyles","backgroundMask","composite","shadow","transform","getPosition","rotation","pathRotation","velocity","rotateData","transformData","a","b","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","getStyleFromRgb","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","shape","drawer","drawers","get","draw","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","type","s","l","randomColorValue","midColorValue","colorManagers","Map","addColorManager","manager","set","hue2rgb","p","q","t","stringToRgba","input","stringPrefix","parseString","hexFixed","replace","_","g","result","exec","parseInt","rangeColorToRgb","index","useIndex","colorToRgb","itemFromArray","res","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","max","min","hslToRgb","hsl","hslPercent","floor","hslaToRgba","hsla","rgbResult","fixedMin","randomInRange","getStyleFromHsl","colorMix","color1","color2","size1","rgb1","rgb2","mix","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","getRadius","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","getRangeValue","status","loops","maxLoops","time","delayTime","getRandom","initialValue","_random","easings","addEasing","name","easing","getEasing","clamp","num","comp1","comp2","weight1","weight2","getRangeMax","getRangeMin","getValue","getDistances","pointA","pointB","dx","dy","distance","getParticleDirectionAngle","direction","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcExactPositionOrRandomFromSize","parseAlpha","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","bounced","pSide","pOtherSide","rectSide","rectOtherSide","factor","isSsr","window","document","safeMatchMedia","query","matchMedia","safeMutationObserver","callback","MutationObserver","isInArray","array","indexOf","loadFont","font","weight","fonts","arrayRandomIndex","isPointInside","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","sourceIsArray","destDict","map","isDivModeEnabled","divs","findItemFromSingleOrMultiple","divModeExecute","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","element","matches","some","checkSelector","circleBounceDataFromParticle","mass","getMass","bounce","horizontal","vertical","circleBounce","xVelocityDiff","yVelocityDiff","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","autoStatus","getPositionOrSize","positionOrSize","canvasSize","rest","arg","isFunction","setTransformValue","newFactor","newValue","Canvas","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","img","createElement","addEventListener","evt","src","_paintBase","_paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","toString","_context","_generated","paint","stop","remove","cb","spawning","destroyed","pfColor","psColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","sizeRate","obs","records","record","attributeName","e","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","manageListener","event","handler","addOptions","passive","capture","removeOptions","removeEventListener","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","OpacityAnimation","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","character","custom","images","polygon","_value","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","moveOptions","rad","radOffset","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","_initPosition","zIndexValue","initialPosition","moveCenter","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","strokeColor","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","overrideShapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","lastFrameTime","timestamp","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","touchStartHandler","touchMoveHandler","radiusX","radiusY","touchCancelHandler","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","getElementById","body","append","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","RgbColorManager","rgbColor","rgbColorManager","hslColorManager","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","breakpoint","pauseAnimation","resumeAnimation","initPjs","particlesJS","pJSDom","catch","initParticlesJS","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","updateFunc","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","arc","updateColorValue","valueAnimation","decrease","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","minValue","maxValue","checkDestroy","updateOpacity","BounceOutMode","includes","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","sizeVelocity","updateSize","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","ExternalInteractorBase","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","particlePos","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","concat","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","addImage","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","Preload","ImagePreloaderPlugin","preloadOptions","existing","imageFunc","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","life","justSpawned","widthRange","heightRange","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","opacityTriangle","pos3","colorTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","getCenter","side","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","translate","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","inset","starInset","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","textData","randomIndexData","fillText","strokeText","promises","all","loadSlim","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater"],"sourceRoot":""}